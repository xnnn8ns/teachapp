class;ключевое слово для определения класса;3
from;Импорта класса из модуля;5
or;Логический оператор для выполнения одного из двух значений: или;3
global;Установка переменной вне текущей области видимости;5
def;Ключевое слово, используемое для определения функции;1
if;Оператор для записи блока условного кода;3
and;Логический оператор для выполнения двух значение: и;3
import;Импорта модулей и классов в текущую программу;4
while;Выполнения блока до тех пор, пока выражение не станет истинным;2
lambda;Используется для создания лямбда-выражений;5
for;Перебор элементов последовательности;3
not;Логическая операция not: не;4
False;Значение для двоичного оператора: ложь;1
True;Значение для двоичного оператора: истина;1
None;Не определен тип объекта;5
continue;Продолжает выполнение следующего цикла в for и while.;6
pass;Пропуск выполнения кода;6
raise;Создание исключений в программе;6
del;Удаление объектов, переменных, списков и т. д.;4
return;В функции возврат значения;2
as;Предоставление имени для импорта;3
elif;Используется вместе с оператором if для операции «else if»;3
in;Проверяет наличие значения в массиве;4
try;Обработка исключений;5
assert;Вставка отладочных утверждений;7
else;Используется с условиями if-elif, когда ни одно из условий не является истинным;3
is;Проверка того, ссылаются ли две переменные на один и тот же объект;4
async;Используется в функции couroutine, с модулем ввода-вывода и await;8
with;Обертка выполнения блока с методами, при реализации функций enter и exit;8
except;Обработка исключений в блоке try;5
finally;Используется с try-except. Код в этом блоке выполняется при любих условиях;5
nonlocal;Доступа к переменным, определенным вне области видимости;6
yield;Возврат значений из функции одно за другим;6
break;Останавливает выполнение цикла  for и while;4
await;Асинхронная обработка блоков кода;8