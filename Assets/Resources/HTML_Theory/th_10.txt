Some loops may contain other loops within themselves.

<b><color=#FFFFFF>Example:</color></b>
i = 1
j = 1
while i < 10:
    while j < 10:
        print(i * j, end="\t")
        j += 1
    print("\n")
    j = 1
    i += 1
The outer loop "while i < 10:" is triggered 9 times until the variable "i" becomes equal to 10. Inside this loop, the inner loop "while j < 10:" is triggered.
The inner loop also fires 9 times until the variable "j" becomes 10. Moreover, all 9 iterations of the inner cycle are triggered within one iteration of the outer cycle.

In each iteration of the inner loop, the product of the numbers "i" and "j" will be output to the console. Then the value of the variable "j" is increased by one. When the inner loop has finished working,
the values of the variable "j" are reset to 1, and the value of the variable "i" is increased by one and the transition to the next iteration of the outer loop takes place. And everything repeats until the variable "i" becomes 10.
Accordingly, the inner loop will fire only 81 times for all iterations of the outer loop. As a result, we will get the following console output:



Exiting the "break" and "continue" loop
To control the loop, we can use special break and continue operators. The break operator exits the loop. And the continue statement jumps to the next iteration of the loop.
The break statement can be used if conditions are formed in the loop that are incompatible with its further execution.

<b><color=#FFFFFF>Example:</color></b>
number = 0
while number < 5:
    number += 1
    if number == 3 :    # if number = 3, exit the loop
        break
    print(f"number = {number}")
Here the "while" loop checks the condition "number < 5". And as long as "number" is not equal to 5, it is assumed that the value of number will be output to the console. However, another condition is also checked inside the loop: "if number == 3".
That is, if the value of number is 3, then we exit the loop using the break operator. And as a result, we will get the following console output:

<color=#FFFFFF>Result:</color>
number = 1
number = 2


