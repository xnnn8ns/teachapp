<color=#ffff00ff><b><size=55>In Python gibt es die folgenden logischen Operatoren:</size></b></color>
<color=#add8e6ff><b>and</b></color>(logische Multiplikation),<color=#add8e6ff><b>or</b></color>(logische Addition),<color=#add8e6ff><b>not</b></color>(logische Negation).

<color=#add8e6ff><b>and(und)</b></color>:
Dieser Operator gibt den Wert <b>TRUE</b> nur zurück, wenn alle Variablen den Wert <b>TRUE</b> haben.
Wenn mindestens eine der Variablen <b>FALSE</b> ist, dann ist der Wert <b>FALSE</b>.

<color=#ffff00ff><b><size=55>Beispiel:</size></b></color>
age = 23
weight = 50
result = age > 21 and weight == 50
print(result) <color=#add8e6ff><b> # True</b></color>

In diesem Fall vergleicht der Operator <color=#add8e6ff><b>and</b></color> die Ergebnisse von zwei Ausdrücken: <color=#add8e6ff><b>age > 21</b></color> <color=#add8e6ff><b>weight == 50</b></color>. Und wenn beide Ausdrücke <b>True</b> zurückgeben,
dann gibt der Operator <color=#add8e6ff><b>and</b></color> auch <b>True</b> zurück (formal wird der Wert des letzten Operanden zurückgegeben).

<color=#add8e6ff><b>or(oder)</b></color>:
Dieser Operator gibt den Wert <b>TRUE</b> zurück, wenn mindestens eine Variable den Wert <b>TRUE</b> hat.
Wenn alle Variablen <b>FALSE</b> sind, dann ist der Wert <b>FALSE</b>.

<color=#ffff00ff><b><size=55>Beispiel:</size></b></color>
<color=#add8e6ff><b>age = 25
Married = False
res = age > 21 or Married
print(res)  # True, da der Ausdruck age > 21</b></color>

<color=#add8e6ff><b>not(nicht)</b></color>
Gibt <b>True</b> zurück, wenn der Ausdruck <b>False</b> ist und umgekehrt gibt <b>False</b> zurück, wenn der Wert <b>True</b> ist

<color=#ffff00ff><b><size=55>Beispiel:</size></b></color>
age = 25
Married = False
print(not age > 21) <color=#add8e6ff><b> # False </b></color>
print(not Married) <color=#add8e6ff><b> # True </b></color>
print(not 5)<color=#add8e6ff><b> # False </b></color>
print(not 0) <color=#add8e6ff><b> # True</b></color>

<color=#ffff00ff><b><size=55>0 ist äquivalent zu False, 1 ist äquivalent zu True</size></b></color>