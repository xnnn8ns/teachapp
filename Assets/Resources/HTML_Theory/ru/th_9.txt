<b><color=#ffff00ff><size=55>Другой тип циклов</size></color></b> представляет конструкция <b><color=#add8e6ff>for</color></b>. Этот цикл <b>пробегается</b> по набору значений, <b>помещает</b> каждое значение в переменную, и затем в цикле мы <b>можем</b> с этой переменной <b>производить различные действия</b>.

<b><color=#ffff00ff><size=55>Конструкция:</size></color></b>
<b><color=#add8e6ff>for переменная in набор_значений:
    инструкции</color></b>

После ключевого слова <b><color=#add8e6ff>for</color></b> идет <b>название переменной</b>, в которую будут помещаться значения. Затем после оператора <b><color=#add8e6ff>in</color></b> указывается <b>набор значений</b> и <b>двоеточие</b>.

А со <b>следующей строки</b> располагается <b><color=#add8e6ff>блок инструкций</color></b> цикла, которые также должны иметь <b>отступы</b> от начала цикла. При выполнении цикла Python <b>последовательно получает</b> все значения из набора и <b>передает</b> их переменную. 

Когда все значения из набора <b>будут перебраны</b>, цикл <b>завершает</b> свою работу.
В качестве <b><color=#add8e6ff>набора значений</color></b>, например, можно рассматривать <b>строку</b>, которая по сути представляет набор символов.

<b><color=#ffff00ff><size=55>Пример:</size></color></b>
<b><color=#add8e6ff>mes = "Hello"
 
for c in mes:
    print(c)</color></b>

<b><color=#ffff00ff><size=55>Результат:</size></color></b>
<b><color=#add8e6ff>H
e
l
l
o</color></b>