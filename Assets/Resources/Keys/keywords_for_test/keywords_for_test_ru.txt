class;ключевое слово для определения класса;7
from;Импорта класса из модуля;8
or;Логический оператор для выполнения одного из двух значений: или;5
global;Установка переменной вне текущей области видимости;8
def;Ключевое слово, используемое для определения функции;6
if;Оператор для записи блока условного кода;7
and;Логический оператор для выполнения двух значение: и;5
import;Импорта модулей и классов в текущую программу;9
while;Выполнения блока до тех пор, пока выражение не станет истинным;8
lambda;Используется для создания лямбда-выражений;8
for;Перебор элементов последовательности;9
not;Логическая операция not: не;5
False;Значение для двоичного оператора: ложь;1
True;Значение для двоичного оператора: истина;1
None;Не определен тип объекта;5
continue;Продолжает выполнение следующего цикла в for и while.;8
pass;Пропуск выполнения кода;9
raise;Создание исключений в программе;9
del;Удаление объектов, переменных, списков и т. д.;6
return;В функции возврат значения;6
as;Предоставление имени для импорта;6
elif;Используется вместе с оператором if для операции «else if»;7
in;Проверяет наличие значения в массиве;5
try;Обработка исключений;7
assert;Вставка отладочных утверждений;7
else;Используется с условиями if-elif, когда ни одно из условий не является истинным;7
is;Проверка того, ссылаются ли две переменные на один и тот же объект;5
async;Используется в функции couroutine, с модулем ввода-вывода и await;8
with;Обертка выполнения блока с методами, при реализации функций enter и exit;8
except;Обработка исключений в блоке try;7
finally;Используется с try-except. Код в этом блоке выполняется при любих условиях;5
nonlocal;Доступа к переменным, определенным вне области видимости;6
yield;Возврат значений из функции одно за другим;8
break;Останавливает выполнение цикла  for и while;8
await;Асинхронная обработка блоков кода;8