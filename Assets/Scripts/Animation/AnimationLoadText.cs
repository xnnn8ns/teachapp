using System.Collections;
using System.Collections.Generic;
using TMPro;
using UnityEngine;

public class AnimationLoadText : MonoBehaviour
{
    public TextMeshProUGUI textComponent; // ?????? ?? ????????? ??????
    public string[] textArray; // ?????? ???????
    public string[] textArrayEn;
    private string[] textArrayForType;
    public float typingSpeed = 0.05f; // ???????? ??????
    public float delayBetweenTexts = 2.0f; // ???????? ????? ????????

    private bool isTyping = false; // ????, ???????????, ???? ?? ??????? ??????
    private int currentTextIndex = -1; // ?????? ???????? ??????

    private void Start()
    {
        // ??????? ???????? ????????
        if (LangAsset.CurrentLangLocation == LangLocation.Ru)
            textArrayForType = textArray;
        else
            textArrayForType = textArrayEn;
        TypeRandomText();
    }



    private void TypeRandomText()
    {
        
            int randomIndex;
            do
            {
                randomIndex = Random.Range(0, textArrayForType.Length);
            } while (randomIndex == currentTextIndex); // ?????????, ??? ????? ????? ?? ????????? ? ??????????

            currentTextIndex = randomIndex;

            // ??????? ?????? ?????????? ??????
            StartCoroutine(TypeText(textArrayForType[currentTextIndex]));
        
    }
    // изменил данный способ печати текста - если встречается тире - ставим абзац
    IEnumerator TypeText(string text)
    {
        isTyping = true;
        textComponent.text = "";

        // Разделение текста на две части по символу тире
        string[] parts = text.Split('-');
        if (parts.Length > 1)
        {
            // Объединение двух частей обратно, добавление символа новой строки между ними
            text = parts[0] + "-\n" + parts[1].Trim();
        }

        for (int charIndex = 0; charIndex < text.Length; charIndex++)
        {
            textComponent.text += text[charIndex];
            yield return new WaitForSeconds(typingSpeed);
        }

        isTyping = false;
    }
}
